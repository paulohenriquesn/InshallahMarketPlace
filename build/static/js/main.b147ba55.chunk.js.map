{"version":3,"sources":["services/api.js","pages/Home.js","router.js","index.js"],"names":["api","axios","create","baseURL","Content","Menu","SubMenu","Layout","Home","history","match","useState","Init","btnMenu","setButtonMenu","SearchText","setSearchText","faturamento","setFaturamento","SearchProdutoText","setSearchProdutoText","ProdutoModal","setProdutoModal","ModalProdutoShow","setShowModalProduto","PedidoModal","setPedidoModal","showModal","setShowModal","PedidoProduto","setPedidoProduto","HistoricoLista","setHistoricoLista","PedidosLista","setPedidosLista","ProdutosLista","setProdutosLista","ModalCriarPedidoShow","setModalCriarPedido","idSel","idSelecionado","codigoProdutoNovo","setCodigoProdutoNovo","tipoProdutoNovo","setTipoProdutoNovo","NomeDoProdutoProdutoNovo","setNomeDoProdutoProdutoNovo","PrecoProdutoNovo","setPrecoProdutoNovo","QuantidadeProdutoNovo","setQuantidadeProdutoNovo","nomePedidoNovo","setNomePedidoNovo","CPFPedidoNovo","setCPFPedidoNovo","TelefonePedidoNovo","setTelefonePedidoNovo","EnderecoPedidoNovo","setEnderecoPedidoNovo","FormaDePagamentoPedidoNovo","setFormaDePagamentoPedidoNovo","JaPagouPedidoNovo","Quantidade","setQuantidade","EscolhaAlterar","setEscolhaAlterar","RemoverQuantidadeModalShow","setRemoverQuantidadeModalShow","CadastrarProduto","data","a","post","notification","success","message","FetchProdutos","createPedido","nome_cliente","pedido","nome","CPF","telefone","endereco","valortotal","preco","formadePagamento","Pago","FetchPedidos","fetchFaturamento","get","response","console","log","ZerarFaturamento","FetchHistorico","SearchProduto","SearchPedido","AtualizarFaturamento","valor","ValorTotal","DefinirPago","id","delete","DeleteProduto","codigo","error","AdicionarQuantidade","RemoverQuantidade","AlterarPreco","DeletePedidoHistorico","DeletePedido","props","name","action","onChange","info","file","status","fileList","push","window","location","href","origin","useEffect","undefined","params","msg","style","border","onBack","title","subTitle","extra","key","onClick","type","className","marginTop","visible","okText","cancelText","onCancel","onOk","placeholder","width","e","target","value","tipo","quantidade","src","NomeCliente","Pedido","Endereco","Telefone","FormaDePagamento","defaultValue","formatter","replace","parser","parseFloat","marginBottom","fontSize","pecasVendidas","map","Item","color","length","produto","class","Routes","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b147ba55.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n    baseURL: \"http://localhost:8000\"\r\n})\r\n\r\nexport default api;","import React, { useEffect, useState } from 'react'\r\nimport { Menu, Icon, notification, Layout, List, Typography, Card, Input, Button, Modal, Divider, Timeline, Statistic, InputNumber, Upload, PageHeader } from 'antd'\r\nimport 'antd/dist/antd.css';\r\n\r\nimport api from '../services/api'\r\n\r\nimport '../pages/Home.css'\r\nimport Search from 'antd/lib/input/Search';\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Content } = Layout;\r\n\r\nconst Home = ({ history ,match}) => {\r\n\r\n    const [Init, setInit] = useState(true);\r\n    const [btnMenu, setButtonMenu] = useState('lista-pedidos');\r\n    const [SearchText, setSearchText] = useState('')\r\n\r\n    const [faturamento, setFaturamento] = useState({});\r\n\r\n    const [SearchProdutoText, setSearchProdutoText] = useState('')\r\n\r\n    const [ProdutoModal, setProdutoModal] = useState({})\r\n    const [ModalProdutoShow, setShowModalProduto] = useState(false)\r\n\r\n    const [PedidoModal, setPedidoModal] = useState({});\r\n    const [showModal, setShowModal] = useState(false)\r\n\r\n    const [PedidoProduto, setPedidoProduto] = useState({})\r\n    const [HistoricoLista, setHistoricoLista] = useState([])\r\n    const [PedidosLista, setPedidosLista] = useState([])\r\n    const [ProdutosLista, setProdutosLista] = useState([])\r\n\r\n    const [ModalCriarPedidoShow, setModalCriarPedido] = useState(false);\r\n    const [idSel, idSelecionado] = useState(0)\r\n\r\n    const [codigoProdutoNovo, setCodigoProdutoNovo] = useState(0);\r\n    const [tipoProdutoNovo, setTipoProdutoNovo] = useState(\"\");\r\n    const [NomeDoProdutoProdutoNovo, setNomeDoProdutoProdutoNovo] = useState(\"\");\r\n    const [PrecoProdutoNovo, setPrecoProdutoNovo] = useState(0.0);\r\n    const [QuantidadeProdutoNovo, setQuantidadeProdutoNovo] = useState(0);\r\n\r\n    const [nomePedidoNovo, setNomePedidoNovo] = useState(\"\");\r\n    const [CPFPedidoNovo, setCPFPedidoNovo] = useState(\"\");\r\n    const [TelefonePedidoNovo, setTelefonePedidoNovo] = useState(\"\");\r\n    const [EnderecoPedidoNovo, setEnderecoPedidoNovo] = useState(\"\");\r\n    const [FormaDePagamentoPedidoNovo, setFormaDePagamentoPedidoNovo] = useState(\"\");\r\n    const [JaPagouPedidoNovo, setJaPagouPedidoNovo] = useState(\"Não\");\r\n\r\n    const [Quantidade, setQuantidade] = useState(0)\r\n    const [EscolhaAlterar, setEscolhaAlterar] = useState(\"\");\r\n\r\n    const [RemoverQuantidadeModalShow, setRemoverQuantidadeModalShow] = useState(false)\r\n\r\n    const CadastrarProduto = async (data) => {\r\n        await api.post('/produtos', {\r\n            \"codigo\": codigoProdutoNovo,\r\n            \"tipo\": tipoProdutoNovo,\r\n            \"nome\": NomeDoProdutoProdutoNovo,\r\n            \"preco\": PrecoProdutoNovo,\r\n            \"quantidade\": QuantidadeProdutoNovo\r\n        });\r\n        notification.success({ message: \"Produto Criado com Sucesso!\" });\r\n        FetchProdutos()\r\n    }\r\n\r\n    const createPedido = async () => {\r\n\r\n        await api.post('/process/order', {\r\n            nome_cliente: nomePedidoNovo,\r\n            pedido: PedidoProduto.nome,\r\n            CPF: CPFPedidoNovo,\r\n            telefone: TelefonePedidoNovo,\r\n            endereco: EnderecoPedidoNovo,\r\n            valortotal: PedidoProduto.preco,\r\n            formadePagamento: FormaDePagamentoPedidoNovo,\r\n            Pago: JaPagouPedidoNovo\r\n        })\r\n        FetchPedidos()\r\n\r\n        notification.success({\r\n            message: \"Pedido Criado com Sucesso!\"\r\n        })\r\n\r\n    }\r\n\r\n    const fetchFaturamento = async () => {\r\n        const response = await api.get('/produtos/faturamento')\r\n        setFaturamento(response.data)\r\n        console.log(response.data)\r\n    }\r\n\r\n    const ZerarFaturamento = async () => {\r\n        await api.post('/produtos/zerarfaturamento')\r\n        fetchFaturamento()\r\n    }\r\n\r\n    const FetchProdutos = async () => {\r\n        const response = await api.get('/produtos')\r\n        setProdutosLista(response.data)\r\n        console.log(response.data)\r\n    }\r\n\r\n    const FetchHistorico = async () => {\r\n        const response = await api.get('/process/history')\r\n        console.log(response.data);\r\n        setHistoricoLista(response.data);\r\n    }\r\n    const FetchPedidos = async () => {\r\n        const response = await api.get('/process/order/')\r\n        console.log(response.data)\r\n        setPedidosLista(response.data)\r\n    }\r\n\r\n\r\n    const SearchProduto = async () => {\r\n        const response = await api.get('/produtos/' + SearchProdutoText)\r\n        console.log(response.data)\r\n        setProdutosLista(response.data)\r\n    }\r\n\r\n    const SearchPedido = async () => {\r\n        const response = await api.get('/process/order/' + SearchText)\r\n        console.log(response.data)\r\n        setPedidosLista(response.data)\r\n    }\r\n\r\n    function ValidaCPF(ao_cpf){   \r\n\r\n       \r\n        var cpfValido = /^(([0-9]{3}.[0-9]{3}.[0-9]{3}-[0-9]{2}))$/;     \r\n        if (cpfValido.test(ao_cpf) == false)    {  \r\n           //alert(\"invalido\");\r\n           var valorValido = document.getElementById(\"ao_cpf\").value = \"???????\";\r\n        }\r\n    }\r\n\r\n    const AtualizarFaturamento = async (data) => {\r\n\r\n        await api.post('/produtos/faturar')\r\n        await api.post('/produtos/faturamento', {\r\n            valor: data.ValorTotal\r\n        })\r\n        fetchFaturamento()\r\n    }\r\n\r\n    const DefinirPago = async (id, pedido) => {\r\n        await api.post(`/process/order/pay/${id}`);\r\n        await api.delete(\"/process/order/\" + id)\r\n        await api.post('/produtos/remover/' + pedido);\r\n\r\n\r\n        FetchPedidos()\r\n        FetchHistorico()\r\n        FetchProdutos()\r\n        notification.success({\r\n            message: \"Pedido #\" + id + \" Pago\"\r\n        })\r\n\r\n    }\r\n\r\n    const DeleteProduto = async (codigo) => {\r\n        await api.delete(\"/produtos/\" + codigo)\r\n\r\n        await FetchProdutos()\r\n\r\n        notification.error({\r\n            message: \"Produto #\" + codigo + \" Deletado\"\r\n        })\r\n    }\r\n\r\n    const AdicionarQuantidade = async () => {\r\n        await api.post(`/produtos/adicionar/${ProdutoModal.nome}/${Quantidade}`);\r\n        notification.success({ message: \"Quantidade Adicionada!\" })\r\n        setShowModalProduto(false)\r\n        FetchProdutos()\r\n    }\r\n\r\n    const RemoverQuantidade = async () => {\r\n        await api.post(`/produtos/remover/${ProdutoModal.nome}/${Quantidade}`);\r\n        notification.success({ message: \"Quantidade Removida!\" })\r\n        setShowModalProduto(false)\r\n        FetchProdutos()\r\n    }\r\n\r\n    const AlterarPreco = async () => {\r\n        await api.post(`/produtos/preco/${ProdutoModal.nome}`, {\r\n            valor: Quantidade\r\n        });\r\n        notification.success({ message: \"Preço Alterado!\" })\r\n        setShowModalProduto(false)\r\n        FetchProdutos()\r\n    }\r\n\r\n\r\n    const DeletePedidoHistorico = async (id) => {\r\n\r\n        await api.delete(\"/process/history/\" + id)\r\n\r\n        await FetchHistorico()\r\n\r\n        notification.error({\r\n            message: \"Historico de Pedido #\" + id + \" Deletado\"\r\n        })\r\n    }\r\n\r\n    const DeletePedido = async (id) => {\r\n\r\n        await api.delete(\"/process/order/\" + id)\r\n\r\n        await FetchPedidos()\r\n\r\n        notification.error({\r\n            message: \"Pedido #\" + id + \" Deletado\"\r\n        })\r\n    }\r\n\r\n    const props = {\r\n        name: 'img',\r\n        action: 'http://localhost:8000/produtos/' + idSel,\r\n\r\n        onChange(info) {\r\n            if (info.file.status !== 'uploading') {\r\n                console.log(info.file, info.fileList);\r\n            }\r\n            if (info.file.status === 'done') {\r\n                //notification.success({ message: `${info.file.name} Imagem setada com sucesso!` });\r\n                history.push(\"/msg/\" + `${info.file.name} Imagem setada com sucesso!`)\r\n                window.location.href = window.location.origin + \"/msg/\" + `${info.file.name} Imagem setada com sucesso!`\r\n            } else if (info.file.status === 'error') {\r\n                notification.error({ message: `${info.file.name} Erro ao tentar upar a imagem!` })\r\n            }\r\n        },\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (Init)\r\n            if(match.params.msg != undefined){\r\n                notification.success({ message: match.params.msg });\r\n            }else {\r\n                notification.info({\r\n                    message: \"Olá seja bem vindo :)\"\r\n                })\r\n            }\r\n        FetchPedidos();\r\n        FetchHistorico();\r\n        FetchProdutos();\r\n        fetchFaturamento();\r\n    }, [Init])\r\n\r\n    return (\r\n        <>\r\n            <PageHeader\r\n                style={{\r\n                    border: '1px solid rgb(235, 237, 240)',\r\n                }}\r\n                onBack={() => null}\r\n                title=\"Inshallah Sistema\"\r\n                subTitle=\"@inshallah.modas\"\r\n                extra={[\r\n                    <Button key=\"5\" onClick={() => setButtonMenu(\"lista-produtos\")}>Produtos</Button>,\r\n                    <Button key=\"4\" onClick={() => setButtonMenu(\"cadastrar-produto\")}>Cadastrar Produtos</Button>,\r\n                    <Button key=\"3\" onClick={() => setButtonMenu(\"lista-pedidos\")}>Pedidos</Button>,\r\n                    <Button key=\"2\" onClick={() => setButtonMenu(\"historico\")}>Historico</Button>,\r\n                    <Button key=\"1\" type=\"primary\">\r\n                        Sair\r\n        </Button>,\r\n                ]}\r\n            />\r\n            \r\n            <Content className=\"index\">\r\n\r\n               \r\n                <Content className=\"content\" style={{marginTop: '30px'}}>\r\n                    <Modal\r\n                        visible={RemoverQuantidadeModalShow}\r\n                        title={\"Editando Produto \" + ProdutoModal.nome}\r\n                        okText=\"Alterar\"\r\n                        cancelText=\"Cancelar\"\r\n                        onCancel={() => {\r\n                            setRemoverQuantidadeModalShow(false)\r\n                        }}\r\n                        onOk={() => {\r\n                            setRemoverQuantidadeModalShow(false)\r\n                            switch (EscolhaAlterar) {\r\n                                case \"RemoverQuantidade\":\r\n                                    RemoverQuantidade()\r\n                                    break;\r\n                                case \"AdicionarQuantidade\":\r\n                                    AdicionarQuantidade()\r\n                                    break;\r\n                                case \"AlterarPreço\":\r\n                                    AlterarPreco()\r\n                                    break;\r\n                            }\r\n\r\n                        }}\r\n                    >\r\n                        <InputNumber placeholder=\"Valor\" style={{ width: '100%' }} onChange={(e) => {\r\n                            setQuantidade(e)\r\n                        }} />\r\n                    </Modal>\r\n\r\n                    <Modal\r\n                        visible={ModalCriarPedidoShow}\r\n                        title=\"Novo Pedido\"\r\n                        okText=\"Criar Pedido\"\r\n                        cancelText=\"Cancelar\"\r\n                        onCancel={() => {\r\n                            setModalCriarPedido(false)\r\n                        }}\r\n                        onOk={() => {\r\n                            setModalCriarPedido(false)\r\n                            createPedido();\r\n                            FetchPedidos()\r\n                        }}\r\n                    >\r\n                        <>\r\n                            <Input placeholder=\"Nome do Cliente\" className=\"inputFormCriarPedido\" onChange={(e) => {\r\n                                setNomePedidoNovo(e.target.value);\r\n                            }} />\r\n                            <Input placeholder=\"CPF do Cliente\" className=\"inputFormCriarPedido\" onChange={(e) => {\r\n                                try {\r\n                                    setCPFPedidoNovo(e.target.value);                              \r\n                                } catch{ }\r\n                            }} />\r\n                            <Input placeholder=\"Telefone do Cliente\" className=\"inputFormCriarPedido\" onChange={(e) => {\r\n                                try {\r\n                                    setTelefonePedidoNovo(e.target.value);\r\n                                } catch{ }\r\n                            }} />\r\n                            <Input placeholder=\"Endereço do Cliente\" className=\"inputFormCriarPedido\" onChange={(e) => {\r\n                                setEnderecoPedidoNovo(e.target.value);\r\n                            }} />\r\n                            <Input placeholder=\"Forma de Pagamento (Cartão, Boleto, Dinheiro)\" className=\"inputFormCriarPedido\" onChange={(e) => {\r\n                                setFormaDePagamentoPedidoNovo(e.target.value);\r\n                            }} />\r\n                        </>\r\n                    </Modal>\r\n\r\n                    <Modal\r\n                        visible={ModalProdutoShow}\r\n                        title={ProdutoModal.nome + \" #\" + ProdutoModal.codigo}\r\n                        okText=\"Novo Pedido\"\r\n                        cancelText=\"Fechar\"\r\n                        onCancel={() => {\r\n                            setShowModalProduto(false)\r\n                        }}\r\n                        onOk={() => {\r\n                            setShowModalProduto(false)\r\n                            setModalCriarPedido(true)\r\n                            setPedidoProduto(ProdutoModal)\r\n                        }}\r\n                    >\r\n                        <div className=\"infoProduto\">\r\n                            <nav className=\"_\">\r\n                                <h3>Tipo: {ProdutoModal.tipo}</h3>\r\n\r\n                                <h4>Quantidade: {ProdutoModal.quantidade}</h4>\r\n                                <h1>R$ {ProdutoModal.preco}</h1>\r\n                                <Button onClick={() => {\r\n                                    setEscolhaAlterar(\"RemoverQuantidade\")\r\n                                    setRemoverQuantidadeModalShow(true)\r\n                                }}>Remover Quantidade</Button>\r\n                                <Button onClick={() => {\r\n                                    setEscolhaAlterar(\"AdicionarQuantidade\")\r\n                                    setRemoverQuantidadeModalShow(true)\r\n                                }}>Adicionar Quantidade</Button>\r\n                                <Button onClick={() => {\r\n                                    setEscolhaAlterar(\"AlterarPreço\")\r\n                                    setRemoverQuantidadeModalShow(true)\r\n                                }}>Alterar Preço</Button>\r\n                            </nav>\r\n                            <img src={`http://localhost:8000/produtos/img/${ProdutoModal.codigo}`} className=\"imagemProduto_\"></img>\r\n                        </div>\r\n                    </Modal>\r\n\r\n\r\n                    <Modal\r\n                        visible={showModal}\r\n                        title={PedidoModal.NomeCliente + \"#\" + PedidoModal.id + \" \" + PedidoModal.Pedido}\r\n                        okText=\"Fechar\"\r\n                        cancelText=\" \"\r\n                        onCancel={() => {\r\n                            setShowModal(false)\r\n                        }}\r\n                        onOk={() => { setShowModal(false) }}\r\n                    >\r\n                        <>\r\n                            <p>{PedidoModal.NomeCliente}</p>\r\n                            <p>{PedidoModal.Pedido}</p>\r\n                            <p>{PedidoModal.CPF}</p>\r\n                            <p>{PedidoModal.Endereco}</p>\r\n                            <p>{PedidoModal.Telefone}</p>\r\n                            <h4>{PedidoModal.FormaDePagamento}</h4>\r\n                            <h2>R$ {PedidoModal.ValorTotal}</h2>\r\n                        </>\r\n                    </Modal>\r\n\r\n\r\n\r\n                    {btnMenu == \"cadastrar-produto\" && (\r\n                        <div className=\"produtoCadastro\">\r\n                            <Typography style={{ marginTop: 20 }}>Codigo</Typography>\r\n                            <InputNumber className=\"produtoCadastroInput\" onChange={(e) => {\r\n                                try {\r\n                                    setCodigoProdutoNovo(e)\r\n                                } catch{ }\r\n                            }}></InputNumber>\r\n                            <Divider />\r\n                            <Typography>Tipo</Typography>\r\n                            <Input placeholder=\"Tipo\" className=\"produtoCadastroInput\" onChange={(e) => {\r\n                                setTipoProdutoNovo(e.target.value);\r\n                            }} />\r\n                            <Divider />\r\n                            <Typography>Nome do Produto</Typography>\r\n                            <Input placeholder=\"Nome\" className=\"produtoCadastroInput\" onChange={(e) => {\r\n                                setNomeDoProdutoProdutoNovo(e.target.value);\r\n                            }} />\r\n                            <Divider />\r\n                            <Typography>Preço</Typography>\r\n                            <InputNumber\r\n                                defaultValue={0}\r\n                                formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                className=\"produtoCadastroInput\"\r\n                                placeholder=\"Preço do Produto\"\r\n                                onChange={(e) => {\r\n                                    try {\r\n\r\n                                        setPrecoProdutoNovo(parseFloat(e));\r\n                                    } catch{ }\r\n                                }}\r\n                            />\r\n\r\n                            <Divider />\r\n                            <Typography>Quantidade</Typography>\r\n                            <InputNumber placeholder=\"Quantidade\" className=\"produtoCadastroInput\" onChange={(e) => {\r\n                                try {\r\n                                    setQuantidadeProdutoNovo(e);\r\n                                } catch{ }\r\n                            }} />\r\n                            <Button style={{ marginTop: 20 }} onClick={() => {\r\n                                CadastrarProduto()\r\n                                setButtonMenu(\"lista-produtos\")\r\n                            }}>Cadastrar</Button>\r\n                        </div>\r\n                    )}\r\n\r\n\r\n                    {btnMenu == \"historico\" && (\r\n                        <>\r\n                            <Typography style={{ marginBottom: '20px', fontSize: 17 }}>Historico de Pedidos de Clientes</Typography>\r\n                            <div className=\"status\">\r\n\r\n                                <Statistic title=\"Faturamento\" className=\"statusUN\" value={faturamento.faturamento} />\r\n                                <Statistic title=\"Peças Vendidas\" className=\"statusUN\" value={faturamento.pecasVendidas} />\r\n                            </div>\r\n                            <Button onClick={() => {\r\n                                ZerarFaturamento()\r\n                            }} >Zerar</Button>\r\n                            <Divider />\r\n                            <Timeline>\r\n\r\n                                {HistoricoLista.map((pedido) => {\r\n\r\n                                    return (\r\n                                        <div className=\"pedidoHistorico\">\r\n                                            <Timeline.Item color=\"green\" style={{\r\n                                                width: '400px'\r\n                                            }}>{pedido.NomeCliente} {pedido.Pedido} R$ {pedido.ValorTotal}</Timeline.Item>\r\n                                            <Button onClick={() => {\r\n                                                setPedidoModal(pedido)\r\n                                                setShowModal(true)\r\n                                            }}>Informações</Button>\r\n                                            <Button onClick={() => {\r\n                                                DeletePedidoHistorico(pedido.id)\r\n                                            }} style={{ color: 'red' }}>Deletar</Button>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n\r\n                            </Timeline>\r\n\r\n                        </>\r\n                    )}\r\n\r\n                    {btnMenu == \"lista-pedidos\" && PedidosLista.length > 0 && (\r\n                        <>\r\n                            <Input placeholder=\"Pesquisar\" onChange={(e) => {\r\n                                setSearchText(e.target.value)\r\n                            }} style={{\r\n                                marginTop: 15\r\n                            }} />\r\n                            <Button title=\"Pesquisar\" style={{\r\n                                marginTop: 6\r\n                            }} onClick={() => {\r\n                                SearchPedido()\r\n                            }}>Pesquisar</Button>\r\n                        </>\r\n                    )}\r\n\r\n\r\n                    {btnMenu == \"lista-pedidos\" &&\r\n                        PedidosLista.map((pedido) => {\r\n                            console.log(pedido)\r\n                            return (\r\n                                <Card className=\"pedidoCard\" title={pedido.NomeCliente + \"#\" + pedido.id} extra={<a onClick={() => {\r\n                                    //history.push(\"/pedido/\" + pedido.id)\r\n                                    setPedidoModal(pedido)\r\n                                    setShowModal(true)\r\n                                }}>Ver Pedido</a>} style={{ width: 300 }}>\r\n                                    <p>{pedido.Pedido}</p>\r\n                                    <p>{pedido.ValorTotal}</p>\r\n                                    <p>{pedido.Endereco}</p>\r\n                                    <p>Pago: {pedido.Pago}</p>\r\n                                    <Divider />\r\n                                    <Button style={{ color: 'green' }} onClick={() => {\r\n                                        DefinirPago(pedido.id, pedido.Pedido)\r\n                                        AtualizarFaturamento(pedido)\r\n                                    }}>Definir como Pago</Button>\r\n                                    <Button style={{ color: 'red' }} onClick={() => DeletePedido(pedido.id)}>Deletar</Button>\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n\r\n                    {btnMenu == \"lista-produtos\" && ProdutosLista.length > 0 && (\r\n                        <>\r\n                            <Input placeholder=\"Pesquisar (Codigo)\" onChange={(e) => {\r\n                                setSearchProdutoText(e.target.value)\r\n                            }} style={{\r\n                                marginTop: 15,\r\n                                width: '300px'\r\n                            }} />\r\n                            <Button title=\"Pesquisar\" style={{\r\n                                marginTop: 6\r\n                            }} onClick={() => {\r\n                                SearchProduto()\r\n                            }}>Pesquisar</Button>\r\n                        </>\r\n                    )}\r\n\r\n                    {btnMenu == \"lista-produtos\" && (\r\n                        <>\r\n\r\n\r\n                            <div className=\"ProdutosLista\">\r\n\r\n                                {ProdutosLista.map((produto) => {\r\n                                    console.log(produto.quantidade)\r\n                                    if (produto.quantidade > 0) {\r\n                                        return (\r\n                                            <Card className=\"produtoCard\">\r\n                                                <h1>{produto.nome} <font color=\"green\">R$ {produto.preco}</font> <p style={{ fontSize: 12 }}>{produto.quantidade}qtd</p></h1>\r\n                                                <img src={`http://localhost:8000/produtos/img/${produto.codigo}`} className=\"imagemProduto\"></img>\r\n                                                <Button onClick={() => {\r\n                                                    DeleteProduto(produto.codigo)\r\n                                                }} style={{ color: 'red' }}>Deletar</Button>\r\n                                                <Button onClick={() => {\r\n                                                    setProdutoModal(produto)\r\n                                                    setShowModalProduto(true)\r\n                                                }}>Informações</Button>\r\n                                                <Button onClick={() => {\r\n                                                    setModalCriarPedido(true)\r\n                                                    setPedidoProduto(produto)\r\n                                                }}>Novo Pedido</Button>\r\n                                                <Upload  {...props}>\r\n                                                    <Button onClick={() => {\r\n                                                        idSelecionado(produto.codigo)\r\n                                                    }}>\r\n                                                        <Icon type=\"upload\" /> Definir Imagem Produto\r\n                    </Button>\r\n                                                </Upload>\r\n                                            </Card>\r\n                                        )\r\n                                    } else {\r\n                                        return (\r\n                                            <Card className=\"produtoCard\">\r\n                                                <h1>{produto.nome}</h1>\r\n                                                <h4 style={{ color: 'red' }}>Esgotado!</h4>\r\n                                                <img src={`http://localhost:8000/produtos/img/${produto.codigo}`} className=\"imagemProduto\"></img>\r\n                                                <Button onClick={() => {\r\n                                                    DeleteProduto(produto.codigo)\r\n                                                }} style={{ color: 'red' }}>Deletar</Button>\r\n                                                <Button onClick={() => {\r\n                                                    setProdutoModal(produto)\r\n                                                    setShowModalProduto(true)\r\n                                                }}>Informações</Button>\r\n                                                <Button onClick={() => {\r\n\r\n                                                    setModalCriarPedido(true)\r\n                                                    setPedidoProduto(produto)\r\n                                                }}>Novo Pedido</Button>\r\n                                                <Upload  {...props}>\r\n                                                    <Button onClick={() => {\r\n                                                        idSelecionado(produto.codigo)\r\n                                                    }}>\r\n                                                        <Icon type=\"upload\" /> Definir Imagem Produto\r\n                    </Button>\r\n                                                </Upload>\r\n                                            </Card>\r\n                                        )\r\n                                    }\r\n                                })}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n\r\n\r\n                </Content>\r\n\r\n            </Content >\r\n            \r\n<div class=\"footer\">\r\n</div>\r\n        </>\r\n    )\r\n}\r\n\r\n/*\r\n\r\n                <Menu\r\n                    theme=\"dark\"\r\n                    className=\"menuflutuante\"\r\n                    onClick={() => { }}\r\n                    defaultSelectedKeys={['1']}\r\n                    defaultOpenKeys={['sub1']}\r\n                    mode=\"inline\"\r\n                >\r\n                    <SubMenu\r\n                        key=\"sub1\"\r\n                        title={\r\n                            <span>\r\n                                <Icon type=\"appstore\" />\r\n                                <span>Painel Inshallah</span>\r\n                            </span>\r\n                        }\r\n                    >\r\n                        <Menu.ItemGroup key=\"g1\" title=\"Loja\">\r\n                            <Menu.Item key=\"1\" onClick={() => {\r\n                                setButtonMenu('lista-pedidos')\r\n                            }}>Pedidos</Menu.Item>\r\n                            <Menu.Item key=\"3\" onClick={() => {\r\n                                setButtonMenu('historico')\r\n                            }}>Historico</Menu.Item>\r\n                        </Menu.ItemGroup>\r\n                        <Menu.ItemGroup key=\"g2\" title=\"Produtos\">\r\n                            <Menu.Item key=\"4\" onClick={() => {\r\n                                setButtonMenu('cadastrar-produto')\r\n                            }}>Cadastrar Produto</Menu.Item>\r\n                            <Menu.Item key=\"5\" onClick={() => {\r\n                                setButtonMenu('lista-produtos')\r\n                            }}>Lista de Produtos</Menu.Item>\r\n                        </Menu.ItemGroup>\r\n\r\n                    </SubMenu>\r\n\r\n                </Menu>\r\n*/\r\n\r\nexport default Home;","import React from 'react'\nimport {\n  BrowserRouter,\n  Switch,\n  Route\n} from 'react-router-dom'\n\nimport Home from './pages/Home'\n\nconst Routes = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/msg/:msg\" component={Home} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './router';\n\nReactDOM.render(<Routes />, document.getElementById('root'));\n"],"sourceRoot":""}